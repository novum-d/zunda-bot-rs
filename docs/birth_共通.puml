@startuml
title 誕生日コマンドの共通の処理フロー
start

:DB接続;
:DBマイグレーション実行;

' 初期更新処理

' ギルド情報取得
partition "ギルド情報取得" {
:guildテーブルから「ギルドID」のリストを取得;

:APIから「ギルドIDとギルド名、 メンバー情報リスト」の一覧を取得;
}


' --- ギルド情報更新
partition "ギルド情報更新" {

:guildテーブルから取得したギルドIDのリストに
「APIで取得したギルドIDが存在するか」一つずつ検索;


while (検索対象のギルドIDが存在)
    switch()

    case(  APIとテーブルのギルドIDが一致)
        :該当するギルドIDを持つAPIのギルド情報をguildテーブルの行へ更新;

    case(  guildテーブルに存在し、APIにないギルドIDが存在)
        :該当するギルドIDをguild_memberテーブルから削除;
        :該当するギルドIDをguildテーブルから削除;

    case(  APIに存在し、guildテーブルにないギルドIDが存在)
        :該当するギルドIDを持つAPIをguildテーブルの行に追加;
    endswitch

endwhile

}


' --- ギルドメンバー情報更新
partition "ギルドメンバー情報更新" {

:更新したguildテーブルから「ギルドID」のリストを再取得;
:guild_memberテーブルからギルドIDごとの「ギルドID, メンバーIDのリスト」のマップを取得;

:guild_memberテーブルから取得したギルドIDごとのメンバーIDのリストに
「APIで取得したメンバーIDが存在するか」一つずつ検索;

while (検索対象のメンバーIDが存在)
    switch()

    case(  APIとテーブルのメンバーIDが一致)
        :該当するメンバーIDを持つAPIのメンバー情報をguild_memberテーブルの行へ更新;

    case(  guild_memberテーブルに存在し、APIにないメンバーIDが存在)
        :該当するメンバーIDをguild_memberテーブルから削除;

    case(  APIに存在し、guild_memberテーブルにないメンバーIDが存在)
        :該当するメンバーIDを持つAPIをguild_memberテーブルの行に追加;
    endswitch

endwhile

}

stop

@enduml