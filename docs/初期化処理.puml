@startuml
title 初期化処理フロー
start

' 初期更新処理

' --- ギルド情報取得 -------------------------
partition "ギルド情報取得" {
:guildテーブルから「ギルドID」のリストを取得;

:APIから「ギルドIDとギルド名、 メンバー情報リスト」の一覧を取得;
}
' ----------------------------------------------------


' --- ギルド情報更新 -------------------------
partition "ギルド情報更新" {

:guildテーブルから取得したギルドIDのリストに
「APIで取得したギルドIDが存在するか」一つずつ検索;


while (検索対象のギルドIDが存在)
    if (APIとテーブルのギルドIDが一致) is (はい) then
      :該当するギルドIDを持つAPIのギルド情報をguildテーブルの行へ更新;
    else (いいえ)
    endif

    if (guildテーブルに存在し、APIにないギルドIDが存在) is (はい) then
      :該当するギルドIDをguild_memberテーブルから削除;
      :該当するギルドIDをguildテーブルから削除;
    else (いいえ)
    endif

    if (APIに存在し、guildテーブルにないギルドIDが存在) is (はい) then
      :該当するギルドIDを持つAPIをguildテーブルの行に追加;
    else (いいえ)
    endif
    :次のギルドIDを検索;
endwhile

}
' ----------------------------------------------------


' --- ギルドメンバー情報更新 -------------------------
partition "ギルドメンバー情報更新" {

:更新したguildテーブルから「ギルドID」のリストを再取得;
:guild_memberテーブルからギルドIDごとの「ギルドID, メンバーIDのリスト」のマップを取得;

:guild_memberテーブルから取得したギルドIDごとのメンバーIDのリストに
「APIで取得したメンバーIDが存在するか」一つずつ検索;

while (検索対象のメンバーIDが存在)

    if (APIとテーブルのメンバーIDが一致) is (はい) then
       :該当するメンバーIDを持つAPIのメンバー情報をguild_memberテーブルの行へ更新;
    else (いいえ)
    endif

    if(guild_memberテーブルに存在し、APIにないメンバーIDが存在) is (はい) then
        :該当するメンバーIDをguild_memberテーブルから削除;
    else (いいえ)
    endif

    if(APIに存在し、guild_memberテーブルにないメンバーIDが存在) is (はい) then
        :該当するメンバーIDを持つAPIをguild_memberテーブルの行に追加;
    else (いいえ)
    endif

    :次のメンバーIDを検索;
endwhile

}
' ----------------------------------------------------

stop

@enduml